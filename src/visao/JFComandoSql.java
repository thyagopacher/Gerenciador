/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import static java.awt.EventQueue.invokeLater;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import static java.util.logging.Logger.getLogger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import static javax.swing.UIManager.getInstalledLookAndFeels;
import static javax.swing.UIManager.setLookAndFeel;
import negocio.CargoRN;
import negocio.CompraRN;
import negocio.EmpresaRN;
import negocio.FormaPagamentoRN;
import negocio.FtpRN;
import negocio.ImagemRN;
import negocio.ItensCompraRN;
import negocio.ItensVendaRN;
import negocio.PaisRN;
import negocio.PessoaRN;
import negocio.ProdutoRN;
import negocio.ServicoRN;
import negocio.VendaRN;
import persistencia.Conexao;
import vo.Cargo;
import vo.Compra;
import vo.Empresa;
import vo.Formapagamento;
import vo.Ftp;
import vo.Imagem;
import vo.Itenscompra;
import vo.Itensvenda;
import vo.Pais;
import vo.Pessoa;
import vo.Produto;
import vo.Servico;
import vo.Venda;

/**
 *
 * @author ThyagoHenrique
 */
public class JFComandoSql extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;

    Conexao             cx;
    ProdutoRN           prn;
    CargoRN             crn;
    CompraRN            corn;
    VendaRN             vrn;
    EmpresaRN           ern;
    FormaPagamentoRN    frn;
    FtpRN               ftrn;
    ImagemRN            irn;
    ItensCompraRN       icrn;
    ItensVendaRN        ivrn;
    PaisRN              parn;
    PessoaRN            pern;
    ServicoRN           srn;
    
    /**
     * Creates new form JFCarregaTexto
     */
    public JFComandoSql() {
        initComponents();
        this.setSize(500, 500);
    }

    public JFComandoSql(Conexao cx) {
        initComponents();
        this.setSize(500, 500);
        this.cx = cx;
        prn     = new ProdutoRN(cx);
        crn     = new CargoRN(cx);
        corn    = new CompraRN(cx);
        vrn     = new VendaRN(cx);
        ern     = new EmpresaRN(cx);
        frn     = new FormaPagamentoRN(cx);
        ftrn    = new FtpRN(cx);
        irn     = new ImagemRN(cx);
        icrn    = new ItensCompraRN(cx);
        ivrn    = new ItensVendaRN(cx);
        parn    = new PaisRN(cx);
        pern    = new PessoaRN(cx);
        srn     = new ServicoRN(cx);
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bAbrir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        epTexto = new javax.swing.JEditorPane();
        jLabel1 = new javax.swing.JLabel();
        bExecutar = new javax.swing.JButton();
        pBarra = new javax.swing.JProgressBar();
        bBackup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Carrega texto do computador");
        setMinimumSize(new java.awt.Dimension(500, 500));

        bAbrir.setText("Abrir");
        bAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbrirActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(epTexto);

        jLabel1.setText("Para execução de comandos sql: insert, update, delete");

        bExecutar.setText("Executar");
        bExecutar.setToolTipText("Executar comando sql");
        bExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExecutarActionPerformed(evt);
            }
        });

        bBackup.setText("Backup");
        bBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAbrir)
                        .addGap(32, 32, 32)
                        .addComponent(bExecutar)
                        .addGap(43, 43, 43)
                        .addComponent(bBackup)
                        .addGap(0, 419, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pBarra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAbrir)
                    .addComponent(bExecutar)
                    .addComponent(bBackup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbrirActionPerformed
        try{
            JFileChooser    fc       = new JFileChooser();
            fc.showOpenDialog(null);
            File            arquivo  = fc.getSelectedFile();
            BufferedReader  br       = new BufferedReader(new FileReader(arquivo));
            String          texto    = "";
            String          linha    = br.readLine(); 
            while (linha != null){ 
                texto += linha + "\n";
                linha  = br.readLine();
            }       
            epTexto.setText(texto);
        }catch(HeadlessException | IOException ex){
            showMessageDialog(null, ex, "ERRO ao carregar arquivo:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bAbrirActionPerformed

    private void bExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExecutarActionPerformed
        
    }//GEN-LAST:event_bExecutarActionPerformed

    private void bBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackupActionPerformed
        String msg = "";
        try{
            String               backup      = "";
            List<Produto>        obj_produto = prn.procuraLista("nome", "", "parcial");
            List<Pessoa>         obj_pessoa  = pern.procuraLista("nome", "", "parcial");
            List<Venda>          obj_venda   = vrn.procuraLista("codigo", "", "parcial");
            List<Servico>        obj_servico = srn.procuraLista("nome", "", "parcial");
            List<Cargo>          obj_cargo   = crn.procuraLista("nome", "", "parcial");
            List<Pais>           obj_pais    = parn.procuraLista("nome", "", "parcial");
            List<Compra>         obj_compra  = corn.procuraLista("codigo", "", "parcial");
            List<Imagem>         obj_imagem  = irn.procuraLista("nome", "", "parcial");
            List<Empresa>        obj_empresa = ern.procuraLista("nome", "", "parcial");
            List<Ftp>            obj_ftp     = ftrn.procuraLista("codigo", "", "parcial");
            List<Itensvenda>     obj_ivenda  = ivrn.procuraLista("codigo", "", "parcial");
            List<Itenscompra>    obj_icompra = icrn.procuraLista("codigo", "", "parcial");
            List<Formapagamento> obj_forma   = frn.procuraLista("nome", "", "parcial");

            int                 qtd         = obj_produto.size() + obj_pessoa.size() + obj_venda.size()
                                            + obj_servico.size() + obj_cargo.size()  + obj_pais.size()
                                            + obj_compra.size()  + obj_imagem.size() + obj_empresa.size()
                                            + obj_ftp.size()     + obj_ivenda.size() + obj_icompra.size()
                                            + obj_forma.size();
            if(qtd > 0){
                pBarra.setMaximum(qtd);
                if(!obj_produto.isEmpty()){
                    int qtd2 = 0;
                    epTexto.setText("insert into produto(codigo, nome, altura, comprimento, largura, peso) values ");
                    for (Produto objeto : obj_produto) {
                        backup += "(" + objeto.getCodigo() + "," + objeto.getNome() + "," + objeto.getAltura() + "," + objeto.getComprimento()
                               + "," + objeto.getLargura() + "," + objeto.getPeso();
                        if(qtd2 < obj_produto.size()){
                            backup += "),";
                            qtd2++;
                        }
                        pBarra.setValue(pBarra.getValue() + 1);
                    }
                    backup += ");";
                    epTexto.setText(epTexto.getText() + backup);
                }
                if(!obj_servico.isEmpty()){
                    int qtd2 = 0;
                    epTexto.setText("insert into servico(codigo, nome) values ");
                    for (Servico objeto : obj_servico) {
                        backup += "(" + objeto.getCodigo() + "," + objeto.getNome();
                        if(qtd2 + 1 < obj_servico.size()){
                            backup += "),";
                            qtd2++;
                        }
                        pBarra.setValue(pBarra.getValue() + 1);
                    }
                    backup += ");";
                    epTexto.setText(epTexto.getText() + backup);
                }
                
            }else{
                msg = "Nenhuma informação para realizar backup";
            }
        }catch(Exception ex){
            msg = "Erro causado por:" + ex;
        }
        if(msg != null && !msg.isEmpty()){
            showMessageDialog(null, msg, "Erro:", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_bBackupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            getLogger(JFComandoSql.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        invokeLater(new Runnable() {
            @Override
            public void run() {
                new JFComandoSql().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbrir;
    private javax.swing.JButton bBackup;
    private javax.swing.JButton bExecutar;
    private javax.swing.JEditorPane epTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pBarra;
    // End of variables declaration//GEN-END:variables
}
